/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/6.8/userguide/multi_project_builds.html
 */

rootProject.name = "service-base"

dependencyResolutionManagement {
    repositories {
        mavenCentral()
        maven {
            url = uri("https://jitpack.io")
        }
    }

    versionCatalogs {
        create("libs") {
            version("slf4j", "1.7.25")
            version("spock", "2.2-M1-groovy-3.0")

            library("guice", "com.google.inject:guice:5.1.9")

            library("slf4j-jul", "org.slf4j", "jul-to-slf4j").versionRef("slf4j")
            library("slf4j-jcl", "org.slf4j", "jcl-over-slf4j").versionRef("slf4j")
            library("slf4j-log4j", "org.slf4j", "log4j-over-slf4j").versionRef("slf4j")
            library("slf4j-api", "org.slf4j", "slf4j-api").versionRef("slf4j")
            library("logback", "ch.qos.logback:logback-classic:1.2.3")
            bundle("logging", listOf("slf4j-jul", "slf4j-jcl", "slf4j-log4j", "slf4j-api", "logback"))

            library("spock-core", "org.spockframework", "spock-core").versionRef("spock")
            bundle("spock", listOf("spock-core"))

        }
    }
}

rootProject.projectDir.listFiles().filter { it.isDirectory }.map { subDir ->
    subDir.listFiles().filter {
        it.isFile && it.name.contains(".gradle.kts")
    }.map {
        File(it.parent).name
    }
}.flatten().forEach {
    include(it)
}

rootProject.children.forEach { project ->
    project.buildFileName = "${project.name}.gradle.kts"
    assert(project.buildFile.isFile)
}